#!/usr/bin/env bash

: ${TQL_HOME:=$HOME/tql}
source $TQL_HOME/db_functions

THIS_SCRIPT=`basename $0`
validate_single_column "$@"

STANDARD_COLS="table_name"    # others: auto_increment, ...
TABLES=information_schema.tables

g_defaultAlnums=table_name

# Invoke the big parsing routine
parseCompletely  "$STANDARD_COLS"  "$TABLES"  "table_name"  "$WHERE_PRECLAUSE"  "$@"
retVal=$?
if ((retVal >= 10)); then
    echo Exiting.
    exit $retVal
elif ((retVal == 1)); then
    g_ACTION=UPDATE
fi

getReturnValues  OPTIONS  ACTION_CLAUSE  WHERE_CLAUSE  LIMIT  sortInstructions

if [[ $WHERE_CLAUSE =~ [[:alpha:]] ]]; then
    WHERE_CLAUSE+=" AND "
fi
WHERE_CLAUSE+="table_schema='$TQL_DBNAME'"

isOptionOn "debug|d" $OPTIONS
if (($?)); then
    echo $THIS_SCRIPT:
    echo "Options: $OPTIONS"
    echo " $g_ACTION: $ACTION_CLAUSE"
    echo " Tables: $TABLES"
    echo "  Where: $WHERE_CLAUSE"
    echo "  Limit: $LIMIT"
fi

if [[ $g_ACTION == UPDATE ]]; then
    DB_COMMAND="$g_ACTION $TABLES $ACTION_CLAUSE $WHERE_CLAUSE $LIMIT"
else
    DB_COMMAND="$g_ACTION $ACTION_CLAUSE FROM $TABLES $WHERE_CLAUSE $LIMIT"
fi

isOptionOn "q|query" $OPTIONS
if (($?)); then
    echo "$DB_COMMAND"
    exit 0
fi

RAW_RESULT=$("${TQL_DB_WRAPPER:-mysql}" $g_dbClientOptions -t -e "$DB_COMMAND") || exit $?
if [[ $g_ACTION == UPDATE ]]; then exit 0; fi

if [[ -z $RAW_RESULT ]]; then
    echo No Tables found. > /dev/stderr
    exit 1
fi

foldResultSet "$RAW_RESULT" "$sortInstructions"

