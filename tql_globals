# vim:filetype=sh:fdm=marker:

declare -r TRUE=1
declare -r FALSE=0

declare -r LEFT_SIDE=0
declare -r RIGHT_SIDE=1

declare -r quote1="'"
declare -r quote2='"'
declare -r eitherQuote=$quote1$quote2

# Define the markup flags that describe token types, metadata, and data types.
declare -A tt
tt=(
    [FUNCTION_ARITY]='A'
    [BOOLEAN]='B'
    [BLOB]='b'
    [COMPARATOR]='C'
    [DATE]='D'
    [DATE_RANGE]='d'
    [FORCED_EXPANSION]='E'    # An expandable word that the user has marked with the variable indicator
    [FUNCTION]='F'
    [DECIMAL]='f' [FLOAT]='f' # Let DECIMAL and FLOAT be synonyms
    [INTEGER]='I'
    [INT_RANGE]='i'
    [FLOAT_LIST]='L'
    [INT_LIST]='l'
    [NUMERIC]='N'
    [BEGIN_NCV]='n'
    [OPERATOR]='O'
    [PREFIX_LIST]='P'
    [REGEX_LIST]='R'
    [SPACE]='S'             # distinguishes cosmetic spaces from spaces inside other tokens
    [TIME]='T'
    [TIMESTAMP]='t'
    [STRING_CONSTANT]='V'

    # A word that might be a string constant or an abbreviated variable name:
    [EXPANDABLE_WORD]='W'

    # A sequence of words that might be expandable according to special rules,
    # for handling special intra-query constructs such as DISTINCT and INTERVAL:
    [EXPANDABLE_SEQUENCE]='X'

    [FILENAME]='@'
    [BEGIN_GROUP]='('  [LEFT_PAREN]='('
    [END_GROUP]=')'    [RIGHT_PAREN]=')'
    [BEGIN_FUNCTION]='['
    [END_FUNCTION]=']'
    [END_NCV]='/'      [TYPE_NCV]='/'    # let the end markers / type names be synonymous
    [END_CV]='\'       [TYPE_CV]='\'
    [END_V]='|'        [TYPE_V]='|'

    [DELIMITER]=','

    [ANY_TYPE]=.
)

declare -r g_expandableTypes=${tt[EXPANDABLE_WORD]}${tt[EXPANDABLE_SEQUENCE]}${tt[FUNCTION]}

# Error/status codes
declare -ri ERR_INVALID_OPERATION=1

